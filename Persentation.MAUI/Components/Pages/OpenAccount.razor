@page "/open-account"
@inject ApiService ApiService
@inject NavigationManager NavigationManager

<h3>Open Account</h3>

<EditForm Model="@openAccountCommand" OnValidSubmit="HandleValidSubmit" class="mt-4">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="AccountId">Account ID:</label>
        <InputText id="AccountId" @bind-Value="openAccountCommand.AccountId" class="form-control" />
    </div>

    <div class="form-group">
        <label for="InitialBalance">Initial Balance:</label>
        <InputNumber id="InitialBalance" @bind-Value="openAccountCommand.InitialBalance" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Open Account</button>
</EditForm>

@code {
    private OpenAccountCommand openAccountCommand = new OpenAccountCommand();

    private async Task HandleValidSubmit()
    {
        bool success = await ApiService.OpenAccountAsync(openAccountCommand);

        if (success)
        {
            NavigationManager.NavigateTo("/accounts");
        }
        else
        {
            // خطا در ارسال درخواست
            // می‌توانید پیام خطا به کاربر نمایش دهید.
        }
    }
}